[
  {
    "input": "<reponame>Passport<filename>src/app/left-nav/left-nav.component.scss<gh_stars>1000\n@use \"sass:map\";\n@import 'mixins.scss';\n\n.LeftNav__container {\n  background: rgb(78, 85, 95); //url(/assets/images/darkbg4.png);\n  height: 100vh;\n  //margin-top: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-right: rgb(161, 160, 160) solid 1px;\n  border-top: 0px;\n  border-bottom: 0px;\n  border-left: 0px;\n  font-weight: 300;\n  //position: absolute;\n}\n.LeftNav__toggleAndNameWrapper {\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  display: flex;\n}\n.LeftNav__name {\n  color: rgb(231, 234, 232);\n  font-weight: normal;\n  font-size: 20px;\n  display: inline;\n}\n.LeftNav__toggleButton {\n  margin-right: 8px;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  font: inherit;\n  color: inherit;\n  cursor: pointer;\n  text-align: inherit;\n  display: none;\n}\n.LeftNav__toggleSvg {\n  width: 24px;\n  height: 24px;\n  fill: black;\n}\n.LeftNav__link {\n  color: rgb(231, 234, 232);\n  font-size: 18px;\n  margin-top: 2rem;\n  margin-left: 2.5rem;\n  text-decoration: none;\n}\n\n\n.LeftNav__bottomContainer {\n  justify-self: flex-end;\n  margin-bottom: 3rem;\n  margin-top: auto;\n  display: flex;\n  flex-direction: column;\n}\n.LeftNav__button {\n  width: 80%;\n  min-width: 80px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 10px;\n  border: solid 0.5px lightgray;\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  background-color: rgb(249, 223, 158);\n  box-shadow: 0px 2px 5px rgba(120, 117, 117, 0.4);\n}\n.LeftNav__button:hover {\n  background-color: #2EE59D;\n  box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n  color: #fff;\n  transform: translateY(-7px);\n}\n\n@include tfpBreakpointLessThan(small480) {\n  .LeftNav__button {\n    width: 50px;\n  }\n}\n\n@include tfpBreakpointLessThan(large992) {\n  .LeftNav__toggleButton {\n    display: inline;\n  }\n}\n\n/*\n@media(max-width: $smallTest) {\n  .LeftNav__button {\n    width: 50px;\n  }\n}\n*/\n<reponame>Passport<filename>src/app/left-nav/left-nav.component.html<gh_stars>1000<div class=\"LeftNav__container\">\n\n  <div class=\"LeftNav__toggleAndNameWrapper\"><button class=\"LeftNav__toggleButton\" (click)=\"toggleHamburger()\"><img class=\"LeftNav__toggleSvg\" src=\"assets/svg/hamburgerGPT.svg\"></button><div class=\"LeftNav__name\">The Fit Passport</div></div>\n\n    <a class=\"LeftNav__link\" href=\"{{routes.sendGymInvitePage}}\">Send gym invite</a>\n    <a class=\"LeftNav__link\" href=\"{{routes.listGymInvitesPage}}\">List gym invites</a>\n    <a class=\"LeftNav__link\" href=\"{{routes.listCheckins}}\">List Checkin</a>\n    <a class=\"LeftNav__link\" href=\"app\">Create Membership</a>\n    <a class=\"LeftNav__link\" href=\"app\">List Memberships</a>\n  <div class=\"LeftNav__bottomContainer\">\n    <button class=\"LeftNav__logOut LeftNav__button\" (click)=\"impersonate()\">impersonatet</button>\n    <button class=\"LeftNav__logOut LeftNav__button\" (click)=\"logout()\">Log out</button>\n  </div>\n</div>\n<reponame>Passport<filename>src/app/left-nav/left-nav.component.ts<gh_stars>1000\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../services/auth/auth.service\";\nimport {take} from \"rxjs/operators\";\nimport {RequestService} from \"../services/request-service/request.service\";\nimport { completePageRoutes } from \"../app-routing.consts\";\n\n@Component({\n  selector: 'app-left-nav',\n  templateUrl: './left-nav.component.html',\n  styleUrls: ['./left-nav.component.scss']\n})\nexport class LeftNavComponent implements OnInit {\n  @Output() public hamburgerToggle = new EventEmitter();\n\n  readonly routes = completePageRoutes;\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthService,\n    private requestService: RequestService) { }\n\n  ngOnInit(): void {\n  }\n\n  public toggleHamburger() {\n    this.hamburgerToggle.emit();\n  }\n\n  public logout() {\n    this.authService.logout();\n  }\n\n  public impersonate() {\n    const data = {\n      id: 'gymuabbf8795-7545-4d80-9f5f-7117f6c304da'\n    }\n    this.requestService.opImpersonate(data)\n  }\n}\n",
    "output": "<reponame>Passport<filename>src/app/left-nav/left-nav.component.spec.ts<gh_stars>1000\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { LeftNavComponent } from './left-nav.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { AuthService } from '../services/auth/auth.service';\nimport { RequestService } from '../services/request-service/request.service';\nimport { of } from 'rxjs';\n\ndescribe('LeftNavComponent', () => {\n  let component: LeftNavComponent;\n  let fixture: ComponentFixture<LeftNavComponent>;\n  let mockAuthService: jasmine.SpyObj<AuthService>;\n  let mockRequestService: jasmine.SpyObj<RequestService>;\n\n  beforeEach(async () => {\n    const authServiceSpy = jasmine.createSpyObj('AuthService', ['logout']);\n    const requestServiceSpy = jasmine.createSpyObj('RequestService', ['opImpersonate']);\n\n    await TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [ LeftNavComponent ],\n      providers: [\n        { provide: AuthService, useValue: authServiceSpy },\n        { provide: RequestService, useValue: requestServiceSpy }\n      ]\n    }).compileComponents();\n\n    mockAuthService = TestBed.inject(AuthService) as jasmine.SpyObj<AuthService>;\n    mockRequestService = TestBed.inject(RequestService) as jasmine.SpyObj<RequestService>;\n\n    fixture = TestBed.createComponent(LeftNavComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should emit the hamburger toggle event when the toggle button is clicked', () => {\n    spyOn(component.hamburgerToggle, 'emit');\n    const hamburgerToggle = fixture.nativeElement.querySelector('.LeftNav__toggleButton');\n    hamburgerToggle.click();\n    expect(component.hamburgerToggle.emit).toHaveBeenCalled();\n  });\n\n  it('should call the logout method when the logout button is clicked', () => {\n    const logoutButton = fixture.nativeElement.querySelectorAll('.LeftNav__logOut')[1];\n    logoutButton.click();\n    expect(mockAuthService.logout).toHaveBeenCalled();\n  });\n\n  it('should call the impersonate method when the impersonate button is clicked', () => {\n    const impersonateButton = fixture.nativeElement.querySelectorAll('.LeftNav__logOut')[0];\n    impersonateButton.click();\n    expect(mockRequestService.opImpersonate).toHaveBeenCalled();\n  });\n});\n<eos>"
  }
]